# Create a VPC
# Select All services.
# Click VPC under Networking & Content Delivery.
# In the left sidebar menu, click Your VPCs.
# Click Create VPC.
# Enter the following values for Create VPC:

Name tag: Enter SysOpsVPC.
Pv4 CIDR block range: Enter 10.99.0.0/16.
# Leave the IPv6 CIDR block and Tenancy fields as their default values.
# Click Create VPC.
# Create Six Subnets
# Create First DMZ Layer
# In the left sidebar menu, click Subnets.
# Click Create subnet.
# Enter the following values for Create subnet:
# VPC ID: Select SysOpsVPC.

Name tag: Enter DMZ1public.
Availability Zone: Select US East (N. Virginia)/us-east-1a.
IPv4 CIDR block range: Enter 10.99.1.0/24.
# Click Create subnet.
# Create Second DMZ Layer
# Click Create subnet.
# Enter the following values for Create subnet:
# VPC ID: Select SysOpsVPC.

Name tag: Enter DMZ2public.
Availability Zone: Select US East (N. Virginia)/us-east-1b.
IPv4 CIDR block range: Enter 10.99.2.0/24.
# Click Create subnet.
# Create First App Layer
# Click Create subnet.
# Enter the following values for Create subnet:
# PC ID: Select SysOpsVPC.

Name tag: Enter AppLayer1private.
Availability Zone: Select US East (N. Virginia)/us-east-1a.
IPv4 CIDR block range: Enter 10.99.11.0/24.
# Click Create subnet.
# Create Second App Layer
# Click Create subnet.
# Enter the following values for Create subnet:
# VPC ID: Select SysOpsVPC.

Name tag: Enter AppLayer2private.
Availability Zone: Select US East (N. Virginia)/us-east-1b.
IPv4 CIDR block range: Enter 10.99.12.0/24.
# Click Create subnet.
# Create First Database Layer
# Click Create subnet.
# Enter the following values for Create subnet:
# VPC ID: Select SysOpsVPC.

Name tag: Enter DBLayer1private.
Availability Zone: Select US East (N. Virginia)/us-east-1a.
IPv4 CIDR block range: Enter 10.99.21.0/24.
# Click Create subnet.
# Create Second Database Layer
# Click Create subnet.
# Enter the following values for Create subnet:
# VPC ID: Select SysOpsVPC.

Name tag: Enter DBLayer2private.
Availability Zone: Select US East (N. Virginia)/us-east-1b.
IPv4 CIDR block range: Enter 10.99.22.0/24.
Click Create subnet.
NOTE: We've now created all six subnets. We should have three subnets each in the us-east-1a Availability Zone and the us-east-1b Availability Zone.)*

NOTE: Notice a pattern in the CIDR block ranges? Using the third octet, we categorized them by groups of 10. So for quick reference, we know that if the third octet is:

1 or 2, it's part of the DMZ layer
11 or 12, it's part of the app layer
21 or 22, it's part of the database layer
NOTE: Whether we labeled these subnets public or private doesn’t actually make them public or private — it’s just a naming construct. We’ll actually make them public or private in a bit when we route them to a public or private route table.

Create Internet Gateway
In the left sidebar menu, click Internet Gateways.

For the Name tag, enter "IGW".

Click Create internet gateway.

NOTE: Once it's created, you'll see its State says Detached. Even though it's been created, it isn't part of the VPC yet. Let's fix that.

Click Actions at the top of the screen.

From the dropdown menu, click Attach to VPC.

For Avaliable VPCs, select SysOpsVPC.

Click Attach internet gateway.

NOTE: The state should now say Attached.

Create a NAT Gateway
Create NAT Gateway
In the left sidebar menu, click NAT Gateways. (NOTE: If there’s one already in your account, you can ignore it; we’re still going to create a new one.)
Click Create NAT Gateway.
Enter the following for Create NAT gateway:
Name: Enter NGW.
Subnet: Select DMZ2public.
Connectivity type: Select Public.
Elastic IP allocation ID: Select Allocate Elastic IP.
Click Create NAT gateway.
Create Public Route Table
In the left sidebar menu, click Route Tables. (NOTE: A route table will already exist — when we created the VPC, it created a default route table. But we're going to create two new route tables.)
Click Create route table.
Enter the following for Create route table:
Name tag: Enter PublicRT.
VPC: Select SysOpsVPC.
Click Create route table.
Create Private Route Table
Click Create route table.
Enter the following for Create route table:
Name tag: Enter PrivateRT.
VPC: Select SysOpsVPC.
Click Create route table.
On their own, route tables don't do anything — we have to give them routes to something. For the public route table, we need to . For the private route table, we need to provide a route to the NAT gateway.

Provide Route from the Public Route Table to the Internet Gateway
Select PublicRT.
Click on the Routes tab.
Click Edit routes.
Click Add route.
For Target, select Internet Gateway.
For Destination, select 0.0.0.0/0.
Click Save changes.
We've now created a route from our public route table through the internet gateway into the open internet.

Provide Route from the Private Route Table to the NAT Gateway
Select PrivateRT.
Click on the Routes tab.
Click Edit routes.
Click Add route.
For Target, select NAT Gateway.
For Destination, select 0.0.0.0/0.
Click Save changes.
Associate Public Subnets with the Public Route Table
Click PublicRT.
Click on the Subnet associations tab.
Click Edit subnet associations.
Select the DMZ1public and DMZ2public subnets.
Click Save associations.
Associate Private Subnets with the Private Route Table
Click PrivateRT.
Click on the Subnet associations tab.
Click Edit subnet associations.
Select the following subnets:
AppLayer1private
AppLayer2private
DBLayer1private
DBLayer2private
Click Save associations.
Now, anything placed inside the public route table has a route to the internet gateway, and anything placed inside the private route table has a route to the NAT gateway.

If we have databases or EC2 instances located inside these private subnets, they can get updates from the open internet by going through the NAT gateway, which provides an extra layer of security. Essentially, it’s a one-way street: The resources in the private subnets can access the open internet, but the open Internet cannot access the resources in the private subnets (unless we explicitly allow it).

We’re almost done with this lab. Before we wrap things up, let’s add another layer of security to our VPC by creating an NACL — a sort of firewall for controlling traffic in and out of one or more subnets — for each of our layers.

Create Three NACLs and Associate Them with Subnets
Create DMZ NACL
In the left sidebar menu, click Network ACLs. (NOTE: We should see a default NACL, similar to route tables. The default NACL was created when we created our VPC. But we're going to create three new ones.)
Click Create network ACL.
For Name, enter DMZNACL.
For VPC, select SysOpsVPC.
Click Create network ACL.
Create App NACL
Click Create network ACL.
For Name, enter APPNACL.
For VPC, select SysOpsVPC.
Click Create network ACL.
Create DB NACL
Click Create network ACL.
For Name, enter DBNACL.
For VPC, select SysOpsVPC.
Click Create network ACL.
Associate Subnets with NACLs
Select DMZNACL.
Click on the Subnet associations tab.
Click Edit subnet associations.
Select the DMZ1public and DMZ2public subnets.
Click Save changes.
NOTE: Now traffic coming in and out of these subnets will be subject to the inbound and outbound rules we set up on this particular NACL. We're not going to set up any rules as part of this lab — right now, we're just building the infrastructure and a shell we could put resources in.

Finish NACLs for the Remaining Layers
Click AppNACL.
Click on the Subnet associations tab.
Click Edit subnet associations.
Select the AppLayer1private and AppLayer2private subnets.
Click Save changes.
Click DBNACL.
Click on the Subnet associations tab.
Click Edit subnet associations.
Select the DBLayer1private and DBLayer2private subnets.
Click Save changes.
--------------------------------------------------------------------------------------------
Configure Security Groups
Log in to the AWS console, navigate to Services.
Click VPC, located under Networking & Content Delivery.
Click Security Groups, located in the left sidebar menu.
Select Security Group Bastion, and click Inbound rules, located in the lower panel.
Click Edit inbound rules.
Click, Add rule, and set the following values:
Type: SSH
Source: Anywhere
Click Save rules.
Select Security Group ALB, and click Inbound rules, located in the lower panel.
Click Edit inbound rules.
Click, Add rule, and set the following values:
Type: HTTP
Source: Anywhere
. Click, Add rule to add another rule, and set the following values:
Type: HTTPS
Source: Anywhere
Click Save rules.
Select Security Group AppServer, and click Inbound rules, located in the lower panel.
Click Edit inbound rules.
Click, Add rule, and set the following values:
Type: HTTP
Source: Custom ALB Security Groups (select from search field)
Click, Add rule to add another rule, and set the following values:
Type: SSH
Source: Custom Bastion Security Groups (select from search field)
Click Save rules.
Select Security Group RDSDB, and click Inbound rules, located in the lower panel.
Click Edit inbound rules.
Click, Add rule, and set the following values:
Type: MySQL/Aurora
Source: Custom AppServer Security Groups (select from search field)
Click Save rules.
Configure DMZ ACL
Click Network ACLs, located in the left sidebar menu.
Select Network ACLs DMZ, and click Inbound rules, located in the lower panel.
Click Edit inbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: SSH (22)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: HTTP (80)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 120
Type: HTTPS (443)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 130
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Outbound rules, located in the lower panel.
Click Edit outbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: SSH (22)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: HTTP (80)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 120
Type: HTTPS (443)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 130
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Subnet associations, located in the lower panel.
Click Edit subnet associations.
Select DMZ1public and DMZ2public.
Click Save changes.
Configure the AppLayer ACL
Deselect Network ACL, DMZ, and select AppLayer.
Click Inbound rules, and click Edit inbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: HTTP (80)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Outbound rules, located in the lower panel.
Click Edit outbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: HTTP (80)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Subnet associations, located in the lower panel.
Click Edit subnet associations.
Select AppLayer1 and AppLayer2.
Click Save changes.
Configure the DBLayer ACL
Deselect Network ACL, AppLayer, and select DBLayer.
Click Inbound rules, and click Edit inbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: MySQL/Aurora (3306)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Outbound rules, located in the lower panel.
Click Edit outbound rules.
Click, Add new rule, and set the following values:
Rule number: 100
Type: MySQL/Aurora (3306)
Source: 0.0.0.0/0
Allow/Deny: Allow
Click, Add new rule to add another rule, and set the following values:
Rule number: 110
Type: Custom TCP
Port range: 1024-65535
Source: 0.0.0.0/0
Allow/Deny: Allow
Click Save changes.
Click Subnet associations, located in the lower panel.
Click Edit subnet associations.
Select DBLayer1 and DBLayer2.
Click Save changes.